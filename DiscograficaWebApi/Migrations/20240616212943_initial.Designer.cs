// <auto-generated />
using System;
using DiscograficaWebApi.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiscograficaWebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240616212943_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiscograficaWebApi.DAL.Models.Artista", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biografia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DiscograficaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GeneroMusical")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Nacionalidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreArtistico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("DiscograficaId");

                    b.ToTable("Artistas");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2148),
                            Email = "pinkfloyd@gmail.com",
                            FechaNacimiento = new DateTime(1965, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = 0,
                            IsDeleted = false,
                            Nacionalidad = 42,
                            Nombre = "Pink Floyd",
                            NombreArtistico = "Pink Floyd"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2153),
                            Email = "queen@gmail.com",
                            FechaNacimiento = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = 0,
                            IsDeleted = false,
                            Nacionalidad = 42,
                            Nombre = "Queen",
                            NombreArtistico = "Queen"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2155),
                            Email = "beatles@gmail.com",
                            FechaNacimiento = new DateTime(1960, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = 0,
                            IsDeleted = false,
                            Nacionalidad = 42,
                            Nombre = "The Beatles",
                            NombreArtistico = "The Beatles"
                        });
                });

            modelBuilder.Entity("DiscograficaWebApi.DAL.Models.Cancion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ArtistaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DiscoId")
                        .HasColumnType("bigint");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaLanzamiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeneroMusical")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistaId");

                    b.HasIndex("DiscoId");

                    b.ToTable("Cancions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ArtistaId = 1L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2377),
                            DiscoId = 1L,
                            Duracion = 420,
                            FechaLanzamiento = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = 0,
                            IsDeleted = false,
                            Nombre = "Time"
                        },
                        new
                        {
                            Id = 2L,
                            ArtistaId = 1L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2382),
                            DiscoId = 1L,
                            Duracion = 382,
                            FechaLanzamiento = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = 0,
                            IsDeleted = false,
                            Nombre = "Money"
                        },
                        new
                        {
                            Id = 3L,
                            ArtistaId = 1L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2383),
                            DiscoId = 1L,
                            Duracion = 462,
                            FechaLanzamiento = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = 0,
                            IsDeleted = false,
                            Nombre = "Us and Them"
                        },
                        new
                        {
                            Id = 4L,
                            ArtistaId = 2L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2385),
                            DiscoId = 2L,
                            Duracion = 300,
                            FechaLanzamiento = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = 0,
                            IsDeleted = false,
                            Nombre = "Bohemian Rhapsody"
                        },
                        new
                        {
                            Id = 5L,
                            ArtistaId = 2L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2386),
                            DiscoId = 2L,
                            Duracion = 180,
                            FechaLanzamiento = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = 0,
                            IsDeleted = false,
                            Nombre = "Killer Queen"
                        },
                        new
                        {
                            Id = 6L,
                            ArtistaId = 2L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2387),
                            DiscoId = 2L,
                            Duracion = 240,
                            FechaLanzamiento = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = 0,
                            IsDeleted = false,
                            Nombre = "Somebody to Love"
                        },
                        new
                        {
                            Id = 7L,
                            ArtistaId = 2L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2388),
                            DiscoId = 2L,
                            Duracion = 240,
                            FechaLanzamiento = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = 0,
                            IsDeleted = false,
                            Nombre = "Another One Bites the Dust"
                        },
                        new
                        {
                            Id = 8L,
                            ArtistaId = 3L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2389),
                            DiscoId = 3L,
                            Duracion = 480,
                            FechaLanzamiento = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = 0,
                            IsDeleted = false,
                            Nombre = "Stairway to Heaven"
                        },
                        new
                        {
                            Id = 9L,
                            ArtistaId = 3L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2390),
                            DiscoId = 3L,
                            Duracion = 240,
                            FechaLanzamiento = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = 0,
                            IsDeleted = false,
                            Nombre = "Black Dog"
                        },
                        new
                        {
                            Id = 10L,
                            ArtistaId = 3L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2391),
                            DiscoId = 3L,
                            Duracion = 240,
                            FechaLanzamiento = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = 0,
                            IsDeleted = false,
                            Nombre = "Rock and Roll"
                        });
                });

            modelBuilder.Entity("DiscograficaWebApi.DAL.Models.Disco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ArtistaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaLanzamiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeneroMusical")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UnidadesVendidas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistaId");

                    b.ToTable("Discos");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ArtistaId = 1L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2237),
                            FechaLanzamiento = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = 0,
                            IsDeleted = false,
                            Nombre = "The Dark Side of the Moon",
                            SKU = "DSM",
                            UnidadesVendidas = 4500000
                        },
                        new
                        {
                            Id = 2L,
                            ArtistaId = 2L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2239),
                            FechaLanzamiento = new DateTime(1982, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = 1,
                            IsDeleted = false,
                            Nombre = "Thriller",
                            SKU = "THR",
                            UnidadesVendidas = 70000000
                        },
                        new
                        {
                            Id = 3L,
                            ArtistaId = 3L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2240),
                            FechaLanzamiento = new DateTime(1980, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = 0,
                            IsDeleted = false,
                            Nombre = "Back in Black",
                            SKU = "BIA",
                            UnidadesVendidas = 50000000
                        });
                });

            modelBuilder.Entity("DiscograficaWebApi.DAL.Models.Discografica", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaFundacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("WebSite")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Discograficas");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(1990),
                            Direccion = "Av. Corrientes 1234",
                            Email = "info@sonymusic.com",
                            FechaFundacion = new DateTime(1929, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Nombre = "Sony Music",
                            Telefono = "123456789",
                            WebSite = "www.sonymusic.com"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(1997),
                            Direccion = "Av. Rivadavia 1234",
                            Email = "info@universal.com",
                            FechaFundacion = new DateTime(1934, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Nombre = "Universal Music",
                            Telefono = "987654321",
                            WebSite = "www.universalmusic.com"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(1998),
                            Direccion = "Av. Santa Fe 1234",
                            Email = "info@warner.com",
                            FechaFundacion = new DateTime(1958, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Nombre = "Warner Music",
                            Telefono = "456789123",
                            WebSite = "www.warnermusic.com"
                        });
                });

            modelBuilder.Entity("DiscograficaWebApi.DAL.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Nacionalidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2486),
                            Email = "emiliano@gmail.com",
                            FechaNacimiento = new DateTime(1997, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Nombre = "Emiliano",
                            Password = "123456",
                            Rol = 2,
                            UserName = "Emiliano1"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2488),
                            Email = "ezequiel@gmail.com",
                            FechaNacimiento = new DateTime(1998, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Nombre = "Ezequiel",
                            Password = "123456",
                            Rol = 2,
                            UserName = "EzequielTomas"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedTime = new DateTime(2024, 6, 16, 21, 29, 43, 337, DateTimeKind.Utc).AddTicks(2489),
                            Email = "julieta@gmail.com",
                            FechaNacimiento = new DateTime(1999, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Nombre = "Julieta",
                            Password = "123456",
                            Rol = 2,
                            UserName = "Juli123"
                        });
                });

            modelBuilder.Entity("DiscograficaWebApi.DAL.Models.Artista", b =>
                {
                    b.HasOne("DiscograficaWebApi.DAL.Models.Discografica", "Discografica")
                        .WithMany("Artistas")
                        .HasForeignKey("DiscograficaId");

                    b.Navigation("Discografica");
                });

            modelBuilder.Entity("DiscograficaWebApi.DAL.Models.Cancion", b =>
                {
                    b.HasOne("DiscograficaWebApi.DAL.Models.Artista", "Artista")
                        .WithMany("Cancions")
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiscograficaWebApi.DAL.Models.Disco", "Disco")
                        .WithMany("Cancions")
                        .HasForeignKey("DiscoId");

                    b.Navigation("Artista");

                    b.Navigation("Disco");
                });

            modelBuilder.Entity("DiscograficaWebApi.DAL.Models.Disco", b =>
                {
                    b.HasOne("DiscograficaWebApi.DAL.Models.Artista", "Artista")
                        .WithMany("Discos")
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artista");
                });

            modelBuilder.Entity("DiscograficaWebApi.DAL.Models.Artista", b =>
                {
                    b.Navigation("Cancions");

                    b.Navigation("Discos");
                });

            modelBuilder.Entity("DiscograficaWebApi.DAL.Models.Disco", b =>
                {
                    b.Navigation("Cancions");
                });

            modelBuilder.Entity("DiscograficaWebApi.DAL.Models.Discografica", b =>
                {
                    b.Navigation("Artistas");
                });
#pragma warning restore 612, 618
        }
    }
}
